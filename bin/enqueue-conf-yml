#!/usr/bin/env perl
use YAML;
$\ = "\n";
exit if !$ARGV[0];

use Data::Dumper;

my $y = YAML::LoadFile($ARGV[0]);

my $telco = $y->{'Name'};

#print YAML::Dump($y->{'Queue'} ) ; exit;

#queue();
#ivr();
auto_ivr();
#landing();
#default();

sub landing {
    for(@{$y->{'Landing'}}){
	print 'exten => ',$_,',1,Answer';
	print 'exten => ',$_,',2,Macro(',$y->{'Name'},'-IVR)';
	print 'exten => ',$_,',3,Hangup';
    }
}

sub queue {
    print '[',$y->{'Name'},'](!)';
    print for(@{$y->{'QueueConf'}});
    print;

    for(@{$y->{'Queue'}}){
	print '[',$y->{'Name'},'-',$_->{'ID'},'](base,',$y->{'Name'},')';
	print for(@{$_->{'Conf'}});
    }
    print;
}

sub ivr {
    print '[macro-',$y->{'Name'},'-ivr]';
    print 'exetn => s,1,Answer';
    print 'exetn => s,2,SET(NAME=',$y->{'Name'},')';

    print 'exetn => s,3,GotoIfTime(',$y->{'Hours'  },',mon-fri,*,*?4:TIME)';
    print 'exetn => s,4,GotoIfTime(',$y->{'HoursWE'},',sat-sun,*,*?5:TIME)';

    print 'exetn => s,5,SET(CHANNEL(musicclass)=',$y->{'MusicHold'},')';
    my $i=5;
    for(@{$y->{'IVR'}}){
	$j = (/^\(/)?'':',';
	print 'exetn => s,', $i++, $j, $_ ;
    }
    print 'exetn => s,',$i++,',GoTo(EXIT)';

    for(@{$y->{'Queue'}}){
	print 'exetn => s,',$i++,'(',$_->{'ID'},'),NoOp()';
	print 'exetn => s,',$i++
	    ,',Set(CALLERID(name)=',$y->{'LongName'},': ',$_->{'Name'},')';
	print 'exetn => s,',$i++
	    ,',Queue(',$y->{'Name'},'-',$_->{'ID'},',,,,',$y->{'TimeOut'},')';
	print 'exetn => s,',$i++,',GoTo(EXIT)';
    }

    for(@{$y->{'Xfer'}}){
	print 'exetn => s,',$i++,'(',$_->{'ID'},'),NoOp()';
	print 'exetn => s,',$i++,',Dial(Local/',$_->{'To'},')';
	print 'exetn => s,',$i++,',GoTo(EXIT)';
    }

    print 'exetn => s,',$i++,'(EXIT),NoOp()';
    for(@{$y->{'OnExit'}}){
	$j = (/^\(/)?'':',';
	print 'exetn => s,', $i++, $j, $_ ;
    }
    print 'exetn => s,',$i++,',Hangup';

    print 'exetn => s,',$i++,'(TIME),NoOp()';
    for(@{$y->{'Closed'}}){
	$j = (/^\(/)?'':',';
	print 'exetn => s,', $i++, $j, $_ ;
    }
    print 'exetn => s,',$i++,',Hangup';
}

sub auto_ivr {    
    my $pc = 1;
    print "[macro-$telco--IVR]";
    my $hello = $y->{'IVR'}->{'Play'}->{'Hello'};
    print 'extn => s,',$pc++,",Playback($hello)";
    print 'extn => s,',$pc++,",Macro($telco--IVR-READ)";
    print '';

    my $pc = 1;
    print "[macro-$telco--IVR-READ]";

    my $prompts = $y->{'IVR'}->{'Play'}->{'Prompts'};
    print 'extn => s,',$pc++,',Read(I,',$prompts,',1,,3,5)';

    my @OPT;
    for(@{$y->{'IVR'}->{'DTMF'}}){
	$OPT[$_->[0]] = $_->[1];
    }
    for(0..9){
	$i = defined($OPT[$_])?$OPT[$_]:'-IVR-READ';
	print 'extn => s,',$pc++,",Set(HASH(OPT,$_)=$telco-$i)";
    }
    print 'extn => s,',$pc++,',Macro(${HASH(OPT,${I})})';
    print 'extn => s,',$pc++,",Macro($telco--IVR-READ)";
    print '';
}

sub default {
    landing();

    print 'exten => ',$y->{'Extn'},'0,1,Answer';
    print 'exten => ',$y->{'Extn'},'0,2,Macro(',$y->{'Name'},'-IVR)';
    print 'exten => ',$y->{'Extn'},'0,3,Hangup';

    ## --- Call + XFer Queue/Extn ---

    for(@{$y->{'Queue'}}){
	print 'exten => ',$_->{'Extn'},',1,Answer';
	print 'exten => ',$_->{'Extn'}
	,',2,Queue(',$y->{'Name'},'-',$_->{'ID'},')';
	print 'exten => ',$_->{'Extn'},',3,Hangup';

	print 'exten => *',$_->{'Extn'},',1,Answer';
	print 'exten => *',$_->{'Extn'}
	,',2,AddQueueMember(',$y->{'Name'},'-',$_->{'ID'},')';
	print 'exten => *',$_->{'Extn'},',3,Hangup';

	print 'exten => #',$_->{'Extn'},',1,Answer';
	print 'exten => #',$_->{'Extn'}
	,',2,RemoveQueueMember(',$y->{'Name'},'-',$_->{'ID'},')';
	print 'exten => #',$_->{'Extn'},',3,Hangup';
    }

    for(@{$y->{'Xfer'}}){
	next if !$_->{'Extn'};
	print 'exten => ',$_->{'Extn'},',1,Answer';
	print 'exten => ',$_->{'Extn'},',2,Dial(Local/',$_->{'To'},')';
	print 'exten => ',$_->{'Extn'},',3,Hangup';
    }

    print;
}
