#!/usr/bin/env perl
use strict;

use FindBin;
BEGIN { unshift @INC, "$FindBin::Bin/../lib"; }

use EnQ;
$\="\n";

my $EnQ = EnQ->new({
    config_file => $FindBin::Bin =~ s|(.+/enqueue).+|$1/enqueue.yml|r});

&{\&{$ARGV[0]||'help'}}();

sub pjsip {
    my $p = $EnQ->{'DBA'}->QObjData('User');
    for my $i (keys($p)){
	my ($extn, $pass) = split /:/, $p->{$i}{'extn'};
	my $base = (split /@/, $p->{$i}{'extn'})[1] || 'base';

	print '['.$extn.']';
	print 'type=auth';
	print 'auth_type=userpass';
	print 'username='.$extn;
	print 'password='.$pass;

	print '['.$extn.']('.$base.')';
	print 'type=endpoint';
	print 'auth='.$extn;
	print 'aors='.$extn;

	print '['.$extn.']';
	print 'type=aor';
	print 'max_contacts=1';
	print 'remove_existing=yes';
    }
}

sub did {
    my $p = $EnQ->{'DBA'}->QObjData('DID');
    for my $exten (keys($p)){
	my $act = $p->{$exten}{'act'};
	my $to  = $p->{$exten}{lc "act_$act"};
	printf "exten => %s,1,Macro(EnQ-%s, %s)\n", $exten, $act, $to;
    }
}

sub queues {
    my $q = $EnQ->{'DBA'}->QObjData('Queue');
    for my $i (keys($q)){
	print "[$i](".$q->{$i}{'base'}.")";
    }
}


sub help {
    print "Usage:";
}
